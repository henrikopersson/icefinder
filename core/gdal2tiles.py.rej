***************
*** 46,55 ****
  verbose = False
  
  tilesize = 256
- tileformat = 'png'
  
  tempdriver = gdal.GetDriverByName( 'MEM' )
- tiledriver = gdal.GetDriverByName( tileformat )
  
  # =============================================================================
  def writetile( filename, data, dxsize, dysize, bands):
--- 46,61 ----
  verbose = False
  
  tilesize = 256
+ default_tileformat = 'png'
  
  tempdriver = gdal.GetDriverByName( 'MEM' )
+ 
+ gdal_driver_options = []
+ supported_tileformats = {
+     'png': 'PNG',
+     'jpg': 'JPEG',
+     'tiff': 'GTiff',
+ }
  
  # =============================================================================
  def writetile( filename, data, dxsize, dysize, bands):
***************
*** 80,86 ****
      tmp.WriteRaster( 0, tilesize-dysize, dxsize, dysize, data, band_list=range(1, bands+1))
   
      # ... and then copy it into the final tile with given filename
-     tiledriver.CreateCopy(filename, tmp, strict=0)
  
      return 0
  
--- 86,92 ----
      tmp.WriteRaster( 0, tilesize-dysize, dxsize, dysize, data, band_list=range(1, bands+1))
   
      # ... and then copy it into the final tile with given filename
+     tiledriver.CreateCopy(filename, tmp, strict=0, options=gdal_driver_options)
  
      return 0
  
***************
*** 560,565 ****
      print 'Usage: gdal2tiles.py [-title "Title"] [-publishurl http://yourserver/dir/]'
      print '                     [-nogooglemaps] [-noopenlayers] [-nokml]'
      print '                     [-googlemapskey KEY] [-forcekml] [-v]'
      print '                     input_file [output_dir]'
      print
  
--- 566,572 ----
      print 'Usage: gdal2tiles.py [-title "Title"] [-publishurl http://yourserver/dir/]'
      print '                     [-nogooglemaps] [-noopenlayers] [-nokml]'
      print '                     [-googlemapskey KEY] [-forcekml] [-v]'
+     print '                     [-of FORMAT] [-co "NAME=VALUE"]*' 
      print '                     input_file [output_dir]'
      print
  
***************
*** 583,588 ****
      input_file = ''
      output_dir = ''
  
      isepsg4326 = False
      generatekml = False
  
--- 590,597 ----
      input_file = ''
      output_dir = ''
  
+     tileformat = ''
+ 
      isepsg4326 = False
      generatekml = False
  
***************
*** 622,627 ****
          elif arg == '-googlemapskey':
              i += 1
              googlemapskey = argv[i]
  
          elif arg[:1] == '-':
              print >>sys.stderr, 'Unrecognised command option: ', arg
--- 631,644 ----
          elif arg == '-googlemapskey':
              i += 1
              googlemapskey = argv[i]
+ 
+         elif arg == '-of':
+             i += 1
+             tileformat = argv[i]
+ 
+         elif arg == '-co':
+             i += 1
+             gdal_driver_options.append(argv[i])
  
          elif arg[:1] == '-':
              print >>sys.stderr, 'Unrecognised command option: ', arg
***************
*** 655,660 ****
          publishurl += '/'
      if publishurl:
          publishurl += os.path.basename(output_dir) + '/'
  
      # Open input_file and get all necessary information.
      dataset = gdal.Open( input_file, GA_ReadOnly )
--- 672,689 ----
          publishurl += '/'
      if publishurl:
          publishurl += os.path.basename(output_dir) + '/'
+     if not tileformat:
+         tileformat = default_tileformat
+     
+     tileformat = tileformat.lower()
+     # Get gdal driver for tileformat.
+     if tileformat in supported_tileformats:
+         tiledriver_name = supported_tileformats[tileformat]
+         tiledriver = gdal.GetDriverByName( tiledriver_name )
+     else:
+         print >>sys.stderr, "Unsupported format. Use one of %s. png is preferred for KML overlays."\
+                 % ', '.join(supported_tileformats.keys())
+         sys.exit( 1 )
  
      # Open input_file and get all necessary information.
      dataset = gdal.Open( input_file, GA_ReadOnly )
